@using System
@using System.Diagnostics
@using System.Linq
@using System.Reflection
@using System.Web.Http
@using System.Web.Routing
@using System.Web.Script.Serialization
@using ModelManagement.Api.Controllers
@using ModelManagement.Api
@using Newtonsoft.Json
@using Newtonsoft.Json.Schema
<!DOCTYPE html>

<html>
<head>
    <title>Command API Reference</title>
</head>
<body>
    @{

        <h3>Version: @ApplicationVersion.GetVersion()</h3>
    }
    <table border="1">
        <thead>
            <tr>
                <th>#</th>
                <th>Command Name</th>
                <th>Params</th>
                <th>Returns</th>
            </tr>
        </thead>
        <tbody>
            @{
                //var commands = Assembly.GetAssembly(typeof(PartyController)).GetTypes().ToList()
                //    .Where(t => t.IsClass && !t.IsAbstract && t.Name.Contains(nameof(PartyController)));

                var i = 0;
                var methods = typeof(CommandGeneratorController).GetMethods(BindingFlags.Public | BindingFlags.Instance);
                foreach (var method in methods)
                {
                    i++;
                    var lastAttribute = method.GetCustomAttributes().LastOrDefault();

                    if (lastAttribute != null)
                    {
                        try
                        {
                            RouteAttribute routAttribute = (RouteAttribute)lastAttribute;
                            string template = routAttribute.Template;
                            string args = string.Join("\n", method.GetParameters().ToList());
                            <tr>
                                <td valign="top">@i</td>
                                <td valign="top">@template</td>
                                <td valign="top"><pre>@args</pre></td>
                                <td valign="top"><pre>@method.ReturnType</pre></td>
                            </tr>
                        }
                        catch (Exception)
                        {


                        }

                    }

                }

            }
        </tbody>
    </table>
</body>
</html>
